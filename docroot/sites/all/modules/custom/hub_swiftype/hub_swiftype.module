<?php

/**
 * @file
 * Library for connecting to Swiftype.
 */

require 'lib/swiftype.php';

/**
 * Implements hub_swiftype_menu().
 */
function hub_swiftype_menu() {
  $items = array();

  // The path that the endpoint will be registered to.
  $items['swiftype'] = array(
    'title' => 'Search',
    // The name of the function called when the path is accessed.
    'page callback' => 'hub_swiftype_search_page_callback',
    // Set this value to TRUE to allow access to any user.
    'access callback' => TRUE,
    // Declare this as a simple registered path.
    'type' => MENU_CALLBACK,
  );

  // The path that the endpoint will be registered to.
  $items['employees'] = array(
    'title' => 'Employee Directory',
    // The name of the function called when the path is accessed.
    'page callback' => 'hub_swiftype_employee_directory_callback',
    // Set this value to TRUE to allow access to any user.
    'access callback' => TRUE,
    // Declare this as a simple registered path.
    'type' => MENU_CALLBACK,
  );

  // Return the $items array to register the path.
  return $items;
}

/**
 * Implements hub_swiftype_employee_directory_callback().
 */
function hub_swiftype_employee_directory_callback() {
  $params = drupal_get_query_parameters();

  $client = new \Swiftype\SwiftypeClient(variable_get('swiftype_email'), variable_get('swiftype_password'), variable_get('swiftype_key'));
  $query = $params['query'] ? $params['query'] : '';

  if ($params['facet']) {
    $filters = array(
      'page' => array(
        'type' => 'person',
        'department-name' => $params['facet'],
      ),
    );
  }
  else {
    $filters = array(
      'page' => array(
        'type' => 'person',
      ),
    );
  }

  $results = $client->search('the-hub', 'page', $query, array(
    'per_page' => 21,
    'page' => $params['page'] ? $params['page'] : 1,
    'facets' => array(
      'page' => array(
        'department-name',
      ),
    ),
    'filters' => $filters,
    'fetch_fields' => array(
      'page' => array(
        'title',
        'department-name',
        'department-id',
        'url',
        'email',
        'phone',
      ),
    ),
    'search_fields' => array(
      'page' => array(
        'title',
        'department-name',
        'last_name^3',
      ),
    ),
    'sort_field' => array(
      'page' => 'last-name',
    ),
    'sort_direction' => array(
      'page' => 'asc',
    ),
  ));

  $facets = array();
  foreach ($results['body']->info->page->facets->{'department-name'} as $key => $value) {
    if ($key != '_empty_') {
      $facets[] = $key;
    }
  }

  sort($facets);

  return theme('hub_swiftype_employee_directory', array(
    'results' => $results,
    'range'   => hub_swiftype_page_range($results['body']->info->page),
    'selected_facets' => $params['facet'] ? $params['facet'] : array(),
    'hub_employee_search_url' => variable_get('hub_employee_search_url'),
    'facets' => $facets,
  ));
}

/**
 * Implements hub_swiftype_search_page_callback().
 */
function hub_swiftype_search_page_callback() {
  $params = drupal_get_query_parameters();

  $client = new \Swiftype\SwiftypeClient(variable_get('swiftype_email'), variable_get('swiftype_password'), variable_get('swiftype_key'));

  if ($params['query']) {
    if ($params['facet']) {
      $filters = array(
        'page' => array(
          'type' => $params['facet'],
        ),
      );
    }
    else {
      $filters = NULL;
    }

    $results = $client->search('the-hub', 'page', $params['query'], array(
      'per_page' => 10,
      'page' => $params['page'] ? $params['page'] : 1,
      'filters' => $filters,
      'facets' => array(
        'page' => array(
          'type',
        ),
      ),
    ));
  }
  else {
    $results = NULL;
  }

  return theme('hub_swiftype_search_results', array(
    'results' => $results,
    'range'   => hub_swiftype_page_range($results['body']->info->page),
    'selected_facets' => $params['facet'] ? $params['facet'] : array(),
    'hub_search_url' => variable_get('hub_search_url'),
  ));
}

/**
 * Implements hub_swiftype_theme().
 */
function hub_swiftype_theme() {
  return array(
    'hub_swiftype_search_results' => array(
      'template' => 'theme/search-results',
      'variables' => array(
        'results' => NULL,
        'range'   => range(1, 5),
        'selected_facets' => array(),
      ),
    ),
    'hub_swiftype_employee_directory' => array(
      'template' => 'theme/employee-directory',
      'variables' => array(
        'results' => NULL,
        'range'   => range(1, 5),
        'selected_facets' => array(),
      ),
    ),
  );
}

/**
 * Implements hub_swiftype_page_range().
 */
function hub_swiftype_page_range($info) {
  $start = 1;
  $end = 5;

  if ($info->current_page > 5) {
    $start = $info->current_page - 2;
    $end = $info->current_page + 2;
  }

  if ($info->num_pages < 5) {
    $end = $info->num_pages;
  }

  return range($start, $end);
}

/**
 * Implements hub_swiftype_facet_type().
 */
function hub_swiftype_facet_type($type) {
  $facets = array(
    'department_profile' => 'Departments',
    'event' => 'Events',
    'article' => 'Articles',
    'how_to' => 'How-Tos',
    'topic_page' => 'Guides',
    'person' => 'People',
    'post' => 'News',
  );

  return $facets[$type] ? $facets[$type] : FALSE;
}
